{"remainingRequest":"D:\\GraduationProject\\finally\\music_rs\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!D:\\GraduationProject\\finally\\music_rs\\src\\views\\SearchMusic.vue?vue&type=style&index=0&id=92fdfada&scoped=true&lang=css","dependencies":[{"path":"D:\\GraduationProject\\finally\\music_rs\\src\\views\\SearchMusic.vue","mtime":1650291599632},{"path":"D:\\GraduationProject\\finally\\music_rs\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GraduationProject\\finally\\music_rs\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\GraduationProject\\finally\\music_rs\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\GraduationProject\\finally\\music_rs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GraduationProject\\finally\\music_rs\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiNzb25ncy1zZWFyY2ggewoJcG9zaXRpb246IGFic29sdXRlOwoJd2lkdGg6IDEwNjBweCAhaW1wb3J0YW50OwoJcmlnaHQ6IDA7CglsZWZ0OiAwOwoJbWFyZ2luLWxlZnQ6IGF1dG87CgltYXJnaW4tcmlnaHQ6IGF1dG87Cn0KLyog5a2X5L2T5Zu+5qCH6byg5qCH6KaG55uW5Y+Y6ImyICovCiNzb25ncy1zZWFyY2ggaS5pY29uZm9udC5pY29uLWJvZmFuZzpob3ZlciB7CgljdXJzb3I6IHBvaW50ZXI7CgkvKiBjb2xvcjogcmdiKDIzMSwgNTYsIDQwKTsgKi8KCWNvbG9yOiAjZjU2YzZjOwp9Ci8qICNzb25nLWRpc2NvdmVyIC5lbC10YWJsZXsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIHJpZ2h0OiAwOwogICAgbGVmdDogMDsKICAgIG1hcmdpbi1sZWZ0OiBhdXRvOwogICAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogICAgd2lkdGg6IDE0MDBweDsKfSAqLwoKLyog5pS26JeP5q2M5puy5r+A5rS754q25oCBICovCiNzb25ncy1zZWFyY2ggLmFjdGl2ZSB7Cgljb2xvcjogI2Y1NmM2YzsKfQoKLyog5a2X5L2T5Zu+5qCH6byg5qCH6KaG55uW5Y+Y6ImyICovCiNzb25ncy1zZWFyY2ggaS5pY29uZm9udC5pY29uLXNob3VjYW5nX2h1YWJhbjE6aG92ZXIgewoJY3Vyc29yOiBwb2ludGVyOwp9CgovKiDooajmoLzkuK3kuI3lj6/mkq3mlL7nmoTnmoTnpoHmraLngrnlh7vmoLflvI8gKi8KI3NvbmdzLXNlYXJjaCAuZmFpbCB7CgkvKiBwb2ludGVyLWV2ZW50czogbm9uZTsgKi8KCWNvbG9yOiAjOWI5YjliOwoJY3Vyc29yOiBub3QtYWxsb3dlZDsKfQovKiDlj6/ku6Xmkq3mlL7liJnkuI3lgZrku7vkvZXkv67mlLkgKi8KI3NvbmdzLXNlYXJjaCAuc3VjYyB7CgkvKiBwb2ludGVyLWV2ZW50czogbm9uZTsgKi8KCS8qIGNvbG9yOiAjOWI5YjliOwoJY3Vyc29yOiBub3QtYWxsb3dlZDsgKi8KfQoK"},{"version":3,"sources":["D:\\GraduationProject\\finally\\music_rs\\src\\views\\SearchMusic.vue"],"names":[],"mappings":"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","file":"D:/GraduationProject/finally/music_rs/src/views/SearchMusic.vue","sourceRoot":"","sourcesContent":["<template>\n\t<div id=\"songs-search\">\n\t\t<el-table :data=\"songsData\" stripe style=\"width: 100%;\" :header-cell-style=\"{ fontWeight: 'normal', border: 'none' }\" >\n\t\t\t<!-- :header-cell-style=\"{ fontWeight: 'normal' }\"设置表头样式，中间的连接符去掉，改成驼峰形式 -->\n\t\t\t<el-table-column align=\"center\" prop=\"index\" label=\"\" width=\"120\">\n\t\t\t\t<template #default=\"scope\">\n\t\t\t\t\t<!--序号-->\n                    <span style=\"font-size:16px;width:20px;display:inline-block;\" >\n\t\t\t\t\t\t{{ scope.$index + 1 }}\n\t\t\t\t\t</span>\n                    <!--播放-->\n\t\t\t\t\t<i class=\"iconfont icon-bofang\" \n                        style=\"margin-left:10px;font-size:18px;width:20px;display:inline-block;\" @click=\"startPlay(scope.$index)\" :class=\"\n\t\t\t\t\t\t\t\tscope.row.downUrl == 'None' ? 'fail' : 'succ'\" ></i>\n\t\t\t\t\t<!--收藏-->\n                    <i class=\"iconfont icon-shoucang_huaban1\" style=\"margin-left:10px;font-size:18px;width:20px;display:inline-block;\"\n\t\t\t\t\t\t@click=\"addLove(scope.$index)\" :class=\"[\n\t\t\t\t\t\t\tscope.row.downUrl == 'None' ? 'fail' : 'succ',\n\t\t\t\t\t\t\tscope.row.isLove === true ? 'active' : '', ]\" ></i>\n\t\t\t\t</template>\n\t\t\t</el-table-column>\n\n\t\t\t<!--下载-->\n            <el-table-column prop=\"operation\" align=\"center\" label=\"操作\" width=\"120\">\n                <template #default=\"scope\">\n                    <el-button icon=\"el-icon-download\" @click=\"handleDownload(scope.row.downUrl)\" circle></el-button>\n                </template>\n            </el-table-column>\n\n\t\t\t<el-table-column align=\"center\" prop=\"songName\" label=\"歌曲名\" width=\"220\" >\n\t\t\t\t<!-- 在表格中添加跳转链接 -->\n\t\t\t\t<template #default=\"scope\">\n\t\t\t\t\t{{ scope.row.songName }}\n\t\t\t\t</template>\n\t\t\t</el-table-column>\n\n\t\t\t<el-table-column align=\"center\" prop=\"singerName\" label=\"歌手\" width=\"220\" >\n\t\t\t\t<template #default=\"scope\">\n\t\t\t\t\t{{ scope.row.singerName }}\n\t\t\t\t</template>\n\t\t\t</el-table-column>\n\n\t\t\t<el-table-column align=\"center\" prop=\"album\" label=\"专辑\" width=\"300\" ></el-table-column>\n\n\t\t\t<el-table-column align=\"center\" prop=\"songTime\" label=\"时长\" width=\"200\" >\n\t\t\t\t<template #default=\"scope\">\n\t\t\t\t\t{{ scope.row.songTime }}\n\t\t\t\t</template>\n\t\t\t</el-table-column>\n\t\t</el-table>\n\n\t\t<!-- 分页 -->\n\t\t<el-pagination background layout=\"prev, pager, next\" :total=\"totalNum\" :current-page=\"currentPage\"\n         style=\"padding-top:30px;\" @current-change=\"handleCurrentChange\" ></el-pagination>\n\t</div>\n</template>\n\n\n<script>\nimport { useStore } from \"vuex\"\nimport {downloadMusic} from \"../network/music\"\nimport { _getSearchSongs, _addLoveSong, _cancelLoveSong, _getLoveSongList } from \"../network/request.js\"\n\nexport default {\n\tname: \"searchMusic\",\n\tdata() {\n\t\tconst item = {\n\t\t\tiid: \"\",\n\t\t\tsongName: \"\",\n\t\t\tsingerName: \"\",\n\t\t\talbum: \"\",\n\t\t\tsongTime: \"\",\n\t\t\tdownUrl: \"\",\n\t\t\tpicUrl: \"\",\n\t\t\tisLove: false,\n\t\t}\n\t\treturn {\n\t\t\tuid: \"\",\n\t\t\t// 后台的所有数据\n\t\t\tsongsData: Array(10).fill(item),\n\t\t\t// 搜索关键词\n\t\t\tkeyword: \"\",\n\t\t\t// 当前页面\n\t\t\tcurrentPage: 1,\n\t\t\tpageSize: 10,\n\t\t\t// 分页中的总条目数\n\t\t\ttotalNum: 1000,\n\n\t\t\t// lovesData: Array(10).fill(item),\n\t\t}\n\t},\n\n\tcreated() {\n\t\t// 获得用户id\n\t\tthis.uid = useStore().state.user.uid\n\t\tconsole.log(\"用户id：\" + this.uid)\n        //获取url后面的参数\n\t\tthis.keyword = this.$route.query.keyword\n\t\tconsole.log(this.currentPage)\n\t\t// 得到搜索歌曲歌曲的详情信息\n\t\t_getSearchSongs({ keyword: this.keyword, currentPage: 1 }).then((response) => {\n\t\t\tthis.songsData = response.data.data\n\t\t\tconsole.log(this.songsData)\n\t\t})\n\n\t\t// 页面加载时读取数据\n\t\tif (window.sessionStorage.getItem(\"user\")) {\n\t\t\tconsole.log(\"页面加载\")\n            const session_user = JSON.parse(window.sessionStorage.getItem(\"user\"))\n\t\t\tconsole.log(session_user)\n\t\t\tthis.$store.commit(\"SET_USER\", session_user)\n\t\t}\n\t\t// 页面刷新时保存状态\n\t\twindow.addEventListener(\"beforeunload\", () => {\n\t\t\tconsole.log(\"页面刷新\")\n\t\t\tconsole.log(this.$store.state.user)\n\t\t\twindow.sessionStorage.setItem(\n\t\t\t\t\"user\",\n\t\t\t\tJSON.stringify(this.$store.state.user),\n\t\t\t)\n\t\t})\n\t},\n\n\t// mounted() {\n\t// \t// 得到歌曲是否为该用户的收藏\n\t// \t_getLoveSongList({ uid: this.uid }).then((response) => {\n\t// \t\tthis.lovesData = response.data.data\n\t// \t\t// console.log(this.lovesData)\n\t// \t\tfor (var i = 0; i < this.songsData.length; i++) {\n\t// \t\t\tfor (var j = 0; i < this.lovesData.length; j++) {\n\t// \t\t\t\tif(this.songsData[i] === this.lovesData[j]){\n\t// \t\t\t\t\tthis.songsData[i].isLove = true;\n\t// \t\t\t\t}\n\t// \t\t\t}\n\t// \t\t}\n\t// \t})\n\t// },\n\n\tmethods: {\n\n\t\t//下载歌曲方法\n        handleDownload(url){\n            if(url=='')\n                return\n            downloadMusic({'uid':this.uid}).then(res=>{\n                const r = res.data\n                if(r.code!=0){\n                    this.$message({type: \"warning\", message: r.message,})\n                }else{\n                    this.$message({type: \"success\", message: \"成功，账户扣除1币,在新页面中下载\",})\n                    setTimeout(()=>{\n                        window.open(url)\n                    },1000)\n                }\n            })\n        },\n\n\t\tstartPlay(index) {\n\t\t\tconsole.log(index)\n\t\t\tvar song = this.songsData[parseInt(index)]\n\t\t\tconsole.log(song)\n\t\t\tthis.downUrl = song.downUrl\n\t\t\tconsole.log(this.downUrl)\n\t\t\tconsole.log(song.picUrl)\n\t\t\tvar iid = song.iid\n\t\t\tvar picUrl = song.picUrl\n\t\t\tvar songNae = song.songName\n\t\t\tvar singerName = song.singerName\n\t\t\tvar mp3Url = this.downUrl\n\t\t\t// 将事件传递给子组件，第一个参数为自定义事件名，后续参数为传递过去的数据\n\t\t\tconsole.log(\"开始emit\")\n\t\t\tthis.$emit(\"playmusic\", iid, mp3Url, picUrl, songNae, singerName)\n\t\t\tconsole.log(\"结束emit\")\n\t\t},\n\n\t\t// 下一页\n\t\thandleCurrentChange(val) {\n\t\t\t// 得到歌曲的详情信息\n\t\t\t_getSearchSongs({ keyword: this.keyword, currentPage: val }).then((response) => {\n\t\t\t\tthis.songsData = response.data.data\n\t\t\t\tconsole.log(this.songsData)\n\t\t\t})\n\t\t},\n\n\t\t// 添加收藏歌曲\n\t\taddLove(index) {\n\t\t\tvar isLove = this.songsData[parseInt(index)].isLove\n\t\t\tvar songName = this.songsData[parseInt(index)].songName\n\t\t\tif (isLove === true) {\n\t\t\t\tthis.songsData[parseInt(index)].isLove = false\n\t\t\t\t_cancelLoveSong({\n\t\t\t\t\tuid: this.uid,\n\t\t\t\t\tiid: this.songsData[parseInt(index)].iid,\n\t\t\t\t}).then((response) => {\n\t\t\t\t\tif (response.data.code === 200) {\n\t\t\t\t\t\tconsole.log(\"取消收藏\")\n\t\t\t\t\t\tthis.$message({\n\t\t\t\t\t\t\ttype: \"info\",\n\t\t\t\t\t\t\tmessage: songName + \" \" + \"取消收藏!\",\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tthis.songsData[parseInt(index)].isLove = true\n\t\t\t\t_addLoveSong({\n\t\t\t\t\tuid: this.uid,\n\t\t\t\t\tiid: this.songsData[parseInt(index)].iid,\n\t\t\t\t}).then((response) => {\n\t\t\t\t\tif (response.data.code === 200) {\n\t\t\t\t\t\tconsole.log(\"收藏歌曲\")\n\t\t\t\t\t\tthis.$message({\n\t\t\t\t\t\t\ttype: \"success\",\n\t\t\t\t\t\t\tmessage: songName + \" \" + \"收藏成功!\",\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t},\n\t},\n}\n</script>\n\n<style scoped>\n#songs-search {\n\tposition: absolute;\n\twidth: 1060px !important;\n\tright: 0;\n\tleft: 0;\n\tmargin-left: auto;\n\tmargin-right: auto;\n}\n/* 字体图标鼠标覆盖变色 */\n#songs-search i.iconfont.icon-bofang:hover {\n\tcursor: pointer;\n\t/* color: rgb(231, 56, 40); */\n\tcolor: #f56c6c;\n}\n/* #song-discover .el-table{\n    position: absolute;\n    right: 0;\n    left: 0;\n    margin-left: auto;\n    margin-right: auto;\n    width: 1400px;\n} */\n\n/* 收藏歌曲激活状态 */\n#songs-search .active {\n\tcolor: #f56c6c;\n}\n\n/* 字体图标鼠标覆盖变色 */\n#songs-search i.iconfont.icon-shoucang_huaban1:hover {\n\tcursor: pointer;\n}\n\n/* 表格中不可播放的的禁止点击样式 */\n#songs-search .fail {\n\t/* pointer-events: none; */\n\tcolor: #9b9b9b;\n\tcursor: not-allowed;\n}\n/* 可以播放则不做任何修改 */\n#songs-search .succ {\n\t/* pointer-events: none; */\n\t/* color: #9b9b9b;\n\tcursor: not-allowed; */\n}\n\n</style>\n"]}]}